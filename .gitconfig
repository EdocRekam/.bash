[user]
	name = Edoc Rekam
	email = edoc.rekam@gmail.com
[gui]
	fontdiff = -family \"Courier New\" -size 9 -weight normal -slant roman -underline 0 -overstrike 0
[difftool]
	prompt = true
[difftool "vsdiff"]
	cmd = estart.exe VSDIFF 64 HERNE -r1 \"$LOCAL\" \"$REMOTE\"
	trustexitcode = false
[difftool "vsddiff"]
	cmd = estart.exe VSDIFF 64 HERNE -t \"$REMOTE\" \"$LOCAL\" 
	trustexitcode = false
[merge]
	tool = vsmerge
[mergetool "vsmerge"]
	cmd = estart.exe VSMERGE 64 HERNE -smart -quiet \"$BASE\" \"$LOCAL\" \"$REMOTE\" \"$MERGED\"
[push]
	default = simple
[core]
	autocrlf = false
	whitespace = trailing-space,space-before-tab,cr-at-eol
[am]
	keepcr = true
[alias]
        bless = !git config credential.helper wincred
	vsddiff = difftool -t vsddiff --dir-diff
        last = log -1 HEAD
        ls-same = "!git ls-tree -r HEAD | cut -c 14- | sort | uniq -D -w 40"
        tfspush = tf checkin --deep --metadata --no-lock --mentions --keep-author
        trim = !git ls-files -mo --exclude-from=.gitignore -z | xargs -0 sani
        unstage = reset HEAD --
        vsdiff = difftool -t vsdiff
        undo = "!f() { n=${1-1}; git reset HEAD~$n; }; f"

	# Example: git ls
	#   Print the last 20 commits in a GITK style list.
        ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%an]" --decorate -n20

	# Example: git missing vso/radu/35344_3
	#   Lists commits in vso/radu/35344_3 not in the current branch.
	missing = "!f() { commits="$(git cherry HEAD $1 | grep + | cut -c 3-8)" ; [[ ! -z $commits ]] && echo git cherry-pick ${commits} ; }; f"

	# Example: git apply-missing vso/radu/35344_3
	#   Cherry picks commits in vso/radu/35344_3 not in the currrent
	#   branch.
	apply-missing = "!f() { commits="$(git cherry HEAD $1 | grep + | cut -c 3-8)" ; [[ ! -z $commits ]] && git cherry-pick ${commits} ; }; f"

	# Example: git branch-applied
	#   Lists all branches that have been patched into the current
	#   branch.
	branch-applied = "!f() { branches="$(git for-each-ref --format='%(refname)' refs/heads/ )"; for b in ${branches}; do m="$(git missing ${b})"; if [[ -z ${m} ]]; then printf '    Patched: %s\n' "${b}"; else printf 'Not Patched: %s\n' "${b}"; fi done }; f"
[credential]
	helper = wincred
